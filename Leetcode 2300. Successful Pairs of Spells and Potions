class Solution {
public:
    vector<int> successfulPairs(vector<int>& spells, vector<int>& potions, long long success) {
        sort(potions.begin(), potions.end());
        vector<int> pair;

        for (int i = 0; i < spells.size(); i++) {
            int start = 0;
            int end = potions.size() - 1;
            int index = potions.size();

            while (start <= end) {
                int mid = start + (end - start) / 2;
                long long product = (long long)spells[i] * potions[mid];

                if (product >= success) {
                    index = mid;
                    end = mid - 1;
                } else {
                    start = mid + 1;
                }
            }

            pair.push_back(potions.size() - index);
        }

        return pair;
    }
};
